{"version":3,"sources":["services/apiService.js","dvr/misssionChannel.js","dvr/appMission.js","dvr/nav.js","dvr/newMission.js","dvr/createToMission.js","App.js","serviceWorker.js","index.js"],"names":["doApiGet","_url","a","fetch","resp","json","data","doApiPost","_body","method","body","JSON","stringify","headers","console","log","MissionChannel","props","item","Fragment","channels","length","map","element","i","key","className","id","name","ip","port","type","duration","AppMission","useState","missions_ar","setMissionArr","useEffect","missions","then","Nav","to","NewMission","history","useHistory","onSubmit","event","preventDefault","bodyData","target","mission_name","value","message","alert","push","placeholder","CreatChannel","mis_id","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"kQAEaA,EAAQ,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,MAAMF,GADH,cAChBG,EADgB,gBAEHA,EAAKC,OAFF,cAEhBC,EAFgB,yBAGbA,GAHa,2CAAH,sDAMRC,EAAS,uCAAG,WAAON,EAAMO,GAAb,iBAAAN,EAAA,sEACJC,MAAMF,EAAM,CACzBQ,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACL,eAAgB,sBALH,cACjBT,EADiB,gBAQJA,EAAKC,OARD,cAQjBC,EARiB,OASrBQ,QAAQC,IAAI,eAAgBT,GATP,kBAUdA,GAVc,2CAAH,wDCiCPU,MAxCf,SAAwBC,GAEtB,IAAMC,EAAOD,EAAMC,KAEnB,OACE,kBAAC,IAAMC,SAAP,KACGD,EAAKE,SAASC,OAAS,EAAIH,EAAKE,SAASE,KAAI,SAACC,EAASC,GACtD,OACE,wBAAIC,IAAKD,GACP,wBAAIE,UAAU,gBAAgBR,EAAKS,IACnC,wBAAID,UAAU,gBAAgBR,EAAKU,MACnC,wBAAIF,UAAU,gBAAgBH,EAAQI,IACtC,wBAAID,UAAU,gBAAgBH,EAAQM,IACtC,wBAAIH,UAAU,gBAAgBH,EAAQO,MACtC,wBAAIJ,UAAU,gBAAgBH,EAAQQ,MACtC,wBAAIL,UAAU,gBAAgBR,EAAKc,UAEnC,wBAAIN,UAAU,qBAMf,4BACH,wBAAIA,UAAU,gBAAgBR,EAAKS,IACnC,wBAAID,UAAU,gBAAgBR,EAAKU,MACnC,wBAAIF,UAAU,iBACd,wBAAIA,UAAU,iBACd,wBAAIA,UAAU,iBACd,wBAAIA,UAAU,iBACd,wBAAIA,UAAU,gBAAgBR,EAAKc,UACnC,wBAAIN,UAAU,oBC0BPO,MAtDf,SAAoBhB,GAAQ,IAAD,EACUiB,mBAAS,IADnB,mBACpBC,EADoB,KACPC,EADO,KAIzBC,qBAAU,WAERC,MAEC,IAEH,IAAMA,EAAW,WAEftC,EADU,kCACIuC,MAAK,SAAAjC,GACfQ,QAAQC,IAAI,gBAAgBT,EAAKgC,UACjCF,EAAc9B,EAAKgC,cAMzB,OAEE,yBAAKZ,UAAU,oBAEb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,wCAAd,+BACA,2BAAOA,UAAU,4BACf,+BACE,4BACE,yCACA,oCACA,sCACA,kCACA,oCACA,oCACA,wCACA,6CAGJ,+BACGS,EAAYb,KAAI,SAACJ,EAAMM,GAEtB,OACE,kBAAC,EAAD,CAAgBN,KAAMA,EAAMO,IAAKP,EAAKS,a,mBChCvCa,MAZf,SAAavB,GACT,OACI,yBAAKS,UAAU,8DACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAMe,GAAI,IAAKf,UAAU,wBAAzB,gBACA,kBAAC,IAAD,CAAMe,GAAI,gBAAiBf,UAAU,wBAArC,kBACA,kBAAC,IAAD,CAAMe,GAAI,gBAAiBf,UAAU,wBAArC,qBC2DDgB,MA/Df,SAAoBzB,GAElB,IAAI0B,EAAUC,cA8Bd,OACE,yBAAKlB,UAAU,qBACb,wBAAIA,UAAU,oBAAd,kBACA,yBAAKA,UAAU,WACb,0BAAMA,UAAU,WAAWmB,SAjClB,SAACC,GACdA,EAAMC,iBAKN,IAAIC,EAAW,CACbpB,KAAMkB,EAAMG,OAAOC,aAAaC,MAChCnB,SAAUc,EAAMG,OAAOjB,SAASmB,OAKlC5C,EADU,gCACKyC,GACZT,MAAK,SAAAjC,GAEAA,EAAK8C,SACPtC,QAAQC,IAAI,eAAgBT,EAAK8C,SACjCC,MAAM/C,EAAK8C,WAGXtC,QAAQC,IAAI,OAAQT,GACpBqC,EAAQW,KAAK,uBAYb,yBAAK5B,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,WAEF,yBAAKA,UAAU,SACb,2BAAOC,GAAG,eAAeI,KAAK,OAAOL,UAAU,eAAe6B,YAAY,mBAG9E,yBAAK7B,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,cAEF,yBAAKA,UAAU,SACb,2BAAOC,GAAG,WAAWI,KAAK,OAAOL,UAAU,eAAe6B,YAAY,eAG1E,yBAAK7B,UAAU,qDACb,4BAAQA,UAAU,6BAAlB,OACA,kBAAC,IAAD,CAAMe,GAAI,IAAKf,UAAU,qBAAzB,sBCyBG8B,MAhFf,SAAsBvC,GAEpB,IAAI0B,EAAUC,cA8Bd,OACE,yBAAKlB,UAAU,qBACb,wBAAIA,UAAU,oBAAd,kBACA,yBAAKA,UAAU,WACb,0BAAMA,UAAU,WAAWmB,SAjClB,SAACC,GACdA,EAAMC,iBAEN,IAAIC,EAAW,CACbnB,GAAIiB,EAAMG,OAAOpB,GAAGsB,MACpBrB,KAAMgB,EAAMG,OAAOnB,KAAKqB,MACxBpB,KAAMe,EAAMG,OAAOlB,KAAKoB,MACxBM,OAAQX,EAAMG,OAAOQ,OAAON,OAM9B5C,EADU,gCACKyC,GACZT,MAAK,SAAAjC,GAEAA,EAAK8C,SACPtC,QAAQC,IAAI,eAAgBT,EAAK8C,SACjCC,MAAM/C,EAAK8C,WAGXtC,QAAQC,IAAI,OAAQT,GACpBqC,EAAQW,KAAK,uBAYb,yBAAK5B,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,QAEF,yBAAKA,UAAU,SACb,2BAAOC,GAAG,KAAKI,KAAK,OAAOL,UAAU,eAAe6B,YAAY,iBAGpE,yBAAK7B,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,UAEF,yBAAKA,UAAU,SACb,2BAAOC,GAAG,OAAOI,KAAK,OAAOL,UAAU,eAAe6B,YAAY,WAGtE,yBAAK7B,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,UAEF,yBAAKA,UAAU,SACb,2BAAOC,GAAG,OAAOI,KAAK,OAAOL,UAAU,eAAe6B,YAAY,WAGtE,yBAAK7B,UAAU,YACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,cAAjB,YAEF,yBAAKA,UAAU,SACb,2BAAOC,GAAG,SAASI,KAAK,OAAOL,UAAU,eAAe6B,YAAY,iBAIxE,yBAAK7B,UAAU,qDACb,4BAAQA,UAAU,6BAAlB,OACA,kBAAC,IAAD,CAAMe,GAAI,IAAKf,UAAU,qBAAzB,sBCtDGgC,MAdf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAM,IAAKC,UAAW5B,IACnC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAM,gBAAiBC,UAAWnB,IAC/C,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAM,gBAAiBC,UAAWL,OCJjCM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhE,QAAQgE,MAAMA,EAAM1B,a","file":"static/js/main.e12f1410.chunk.js","sourcesContent":["\r\n\r\nexport const doApiGet = async (_url) => {\r\n    let resp = await fetch(_url);\r\n    let data = await resp.json();\r\n    return data;\r\n}\r\n\r\nexport const doApiPost = async (_url, _body) => {\r\n    let resp = await fetch(_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(_body),\r\n        headers: {\r\n            'content-type': \"application/json\"\r\n        }\r\n    })\r\n    let data = await resp.json()\r\n    console.log(\"service say:\" ,data)\r\n    return data;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nfunction MissionChannel(props) {\r\n\r\n  const item = props.item\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {item.channels.length > 0 ? item.channels.map((element, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td className=\"align-middle\">{item.id}</td>\r\n            <td className=\"align-middle\">{item.name}</td>\r\n            <td className=\"align-middle\">{element.id}</td>\r\n            <td className=\"align-middle\">{element.ip}</td>\r\n            <td className=\"align-middle\">{element.port}</td>\r\n            <td className=\"align-middle\">{element.type}</td>\r\n            <td className=\"align-middle\">{item.duration}</td>\r\n\r\n            <td className=\"align-middle\">\r\n\r\n            </td>\r\n          </tr>\r\n\r\n        )\r\n      }) : <tr>\r\n        <td className=\"align-middle\">{item.id}</td>\r\n        <td className=\"align-middle\">{item.name}</td>\r\n        <td className=\"align-middle\"></td>\r\n        <td className=\"align-middle\"></td>\r\n        <td className=\"align-middle\"></td>\r\n        <td className=\"align-middle\"></td>\r\n        <td className=\"align-middle\">{item.duration}</td>\r\n        <td className=\"align-middle\">\r\n        </td>\r\n      </tr>}\r\n\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default MissionChannel\r\n","import React, { useEffect, useState } from 'react';\r\nimport { doApiGet } from '../services/apiService';\r\nimport MissionChannel from './misssionChannel';\r\n\r\nfunction AppMission(props) {\r\n  let [missions_ar, setMissionArr] = useState([])\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    missions()\r\n\r\n  }, [])\r\n\r\n  const missions = ()=>{\r\n    let url = \"http://localhost:5000/missions\"\r\n    doApiGet(url).then(data => {\r\n        console.log(\"data.missions\",data.missions);\r\n        setMissionArr(data.missions)\r\n        \r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"container-fluid \">\r\n     \r\n      <div className=\"container\">\r\n        <h2 className=\"text-center mt-4 display-4 text-info\">Missions list in the system</h2>\r\n        <table className=\"table table-striped mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>mission #</th>\r\n              <th>Name</th>\r\n              <th>Chanel</th>\r\n              <th>ip</th>\r\n              <th>port</th>\r\n              <th>type</th>\r\n              <th>duration</th>\r\n              <th>Edit/delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {missions_ar.map((item, i) => {\r\n              // console.log(\"item.channels\",item.channels);\r\n              return (\r\n                <MissionChannel item={item} key={item.id}/>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default AppMission\r\n","import React from 'react';\r\nimport { Link} from \"react-router-dom\"\r\nimport \"../css_comps/missions.css\"\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"container bg-secondary text-dark d-flex align-items-center\">\r\n            <div className=\"row\">\r\n                <Link to={\"/\"} className=\"text-decoration-none\">Mission List</Link>\r\n                <Link to={\"/add-mission/\"} className=\"text-decoration-none\">Create Mission</Link>\r\n                <Link to={\"/add-channel/\"} className=\"text-decoration-none\">Create Channel</Link>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { doApiPost} from '../services/apiService';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../css_comps/missions.css\"\r\nfunction NewMission(props) {\r\n\r\n  let history = useHistory();\r\n  let sendForm = (event) => {\r\n    event.preventDefault();\r\n    // let phoneInput = event.target.id_phone;\r\n    // if (phoneInput.value.length === 10 && phoneInput.value[0] === \"0\") {\r\n    //   phoneInput = phoneInput.value.substring(1);\r\n    // }\r\n    let bodyData = {\r\n      name: event.target.mission_name.value,\r\n      duration: event.target.duration.value,\r\n    }\r\n   \r\n    \r\n    let url = \"http://localhost:5000/mission\"\r\n    doApiPost(url, bodyData)\r\n      .then(data => {\r\n        // console.log(\"doApiPost\", data);\r\n        if (data.message) {\r\n          console.log(\"data.message\", data.message);\r\n          alert(data.message);\r\n        }\r\n        else {\r\n          console.log(\"data\", data);\r\n          history.push(\"/add-mission/\");\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container registr\">\r\n      <h1 className=\"mt-5 text-center\">Create Mission</h1>\r\n      <div className=\"col new\">\r\n        <form className=\"col-lg-6\" onSubmit={sendForm}>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">name: </label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"mission_name\" type=\"text\" className=\"form-control\" placeholder=\"Mission name\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">Duration:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"duration\" type=\"text\" className=\"form-control\" placeholder=\"Duration\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <button className=\"btn btn-success mt-3 w-25\">Add</button>\r\n            <Link to={\"/\"} className=\"btn btn-info mt-3\">show missions</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewMission","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { doApiPost} from '../services/apiService';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../css_comps/missions.css\"\r\nfunction CreatChannel(props) {\r\n\r\n  let history = useHistory();\r\n  let sendForm = (event) => {\r\n    event.preventDefault();\r\n    \r\n    let bodyData = {\r\n      ip: event.target.ip.value,\r\n      port: event.target.port.value,\r\n      type: event.target.type.value,\r\n      mis_id: event.target.mis_id.value,\r\n      \r\n    }\r\n   \r\n    \r\n    let url = \"http://localhost:5000/channel\"\r\n    doApiPost(url, bodyData)\r\n      .then(data => {\r\n        // console.log(\"doApiPost\", data);\r\n        if (data.message) {\r\n          console.log(\"data.message\", data.message);\r\n          alert(data.message);\r\n        }\r\n        else {\r\n          console.log(\"data\", data);\r\n          history.push(\"/add-mission/\");\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container registr\">\r\n      <h1 className=\"mt-5 text-center\">Create Mission</h1>\r\n      <div className=\"col new\">\r\n        <form className=\"col-lg-6\" onSubmit={sendForm}>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">ip:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"ip\" type=\"text\" className=\"form-control\" placeholder=\"ip adderss\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">port:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"port\" type=\"text\" className=\"form-control\" placeholder=\"Port\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">type:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"type\" type=\"text\" className=\"form-control\" placeholder=\"type\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-3\">\r\n              <label className=\"float-left\">mis_id:</label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input id=\"mis_id\" type=\"text\" className=\"form-control\" placeholder=\"Mission id\" />\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <button className=\"btn btn-success mt-3 w-25\">Add</button>\r\n            <Link to={\"/\"} className=\"btn btn-info mt-3\">show contacts</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatChannel","import React from 'react';\r\nimport './App.css';\r\nimport AppMission from './dvr/appMission';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Nav from './dvr/nav';\r\nimport NewMission from './dvr/newMission';\r\nimport CreatChannel from './dvr/createToMission';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <Nav/>\r\n      <Route exact path={\"/\"} component={AppMission} />\r\n      <Route exact path={\"/add-mission/\"} component={NewMission} />\r\n      <Route exact path={\"/add-channel/\"} component={CreatChannel} />\r\n      \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}